<Window x:Name="Window" x:Class="EncryptedNotes.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:Ant="clr-namespace:AntWpf.Controls;assembly=AntWpf"
        mc:Ignorable="d"
        Title="Encrypted Notes" Height="450" Width="800" Background="Black">
    <Window.CommandBindings>
        <CommandBinding Command="ApplicationCommands.New" Executed="NewCommand_Executed"/>
        <CommandBinding Command="ApplicationCommands.Open" Executed="OpenCommand_Executed"/>
        <CommandBinding Command="ApplicationCommands.Save" Executed="SaveCommand_Executed"/>
        <CommandBinding Command="ApplicationCommands.SaveAs" Executed="SaveAsCommand_Executed"/>
        <CommandBinding Command="ApplicationCommands.Close" Executed="CloseCommand_Executed"/>
    </Window.CommandBindings>
    <Window.InputBindings>
        <KeyBinding Command="ApplicationCommands.SaveAs" Key="S" Modifiers="Control+Alt"/>
    </Window.InputBindings>
    <Window.Resources>
        <ControlTemplate x:Key="menuitembetter" TargetType="MenuItem">
            <Border x:Name="Bd" Padding="17,0,17,0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Uid="Border_38">
                <ContentPresenter x:Name="ContentPresenter"  Content="{TemplateBinding Header}" Grid.Column="1" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Uid="ContentPresenter_33"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" TargetName="Bd" Value="#333333"/>
                    <Setter Property="BorderBrush" TargetName="Bd" Value="#434343"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="MLB_MenuItem" TargetType="{x:Type MenuItem}">
            <!-- https://jimnuzzi.com/posts/wpf-xaml-menuitem-styles/ -->
            <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Menu}}}"/>

            <Setter Property="Template">

                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type MenuItem}">

                        <Border x:Name="Border"

                        Background="{TemplateBinding Background}"

                        BorderBrush="{TemplateBinding BorderBrush}"

                        BorderThickness="{TemplateBinding BorderThickness}">

                            <Grid>

                                <Grid.ColumnDefinitions>

                                    <ColumnDefinition x:Name="Col0" MinWidth="17" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>

                                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup"/>

                                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>

                                    <ColumnDefinition x:Name="Col3" Width="14"/>

                                </Grid.ColumnDefinitions>

                                <!-- ContentPresenter to show an Icon if needed -->

                                <ContentPresenter Grid.Column="0" Margin="4,0,6,0" x:Name="Icon" VerticalAlignment="Center" ContentSource="Icon"/>

                                <!-- Glyph is a checkmark if needed for a checkable menu -->

                                <Grid Grid.Column="0" Visibility="Hidden" Margin="4,0,6,0" x:Name="GlyphPanel" VerticalAlignment="Center">

                                    <Path x:Name="GlyphPanelpath" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z" FlowDirection="LeftToRight"/>

                                </Grid>

                                <!-- Content for the menu text etc -->

                                <ContentPresenter Grid.Column="1"

                                            Margin="{TemplateBinding Padding}"

                                            x:Name="HeaderHost"

                                            RecognizesAccessKey="True"

                                            ContentSource="Header"/>

                                <!-- Content for the menu IGT -->

                                <ContentPresenter Grid.Column="2"

                                            Margin="8,1,8,1"

                                            x:Name="IGTHost"

                                            ContentSource="InputGestureText"

                                            VerticalAlignment="Center"/>

                                <!-- Arrow drawn path which points to the next level of the menu -->

                                <Grid Grid.Column="3" Margin="4,0,6,0" x:Name="ArrowPanel" VerticalAlignment="Center">

                                    <Path x:Name="ArrowPanelPath" HorizontalAlignment="Right" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,0 L0,8 L4,4 z"/>

                                </Grid>

                                <!-- The Popup is the body of the menu which expands down or across depending on the level of the item -->

                                <Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" x:Name="SubMenuPopup" Focusable="false" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">

                                    <Border x:Name="SubMenuBorder" BorderBrush="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Menu}}}" BorderThickness="1" Padding="2,2,2,2">

                                        <Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True">

                                            <!-- StackPanel holds children of the menu. This is set by IsItemsHost=True -->

                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>

                                        </Grid>

                                    </Border>

                                </Popup>

                            </Grid>

                        </Border>

                        <!-- These triggers re-configure the four arrangements of MenuItem to show different levels of menu via Role -->

                        <ControlTemplate.Triggers>

                            <!-- Role = TopLevelHeader : this is the root menu item in a menu; the Popup expands down -->

                            <Trigger Property="Role" Value="TopLevelHeader">

                                <Setter Property="Padding" Value="6,1,6,1"/>

                                <Setter Property="Placement" Value="Bottom" TargetName="SubMenuPopup"/>

                                <Setter Property="MinWidth" Value="0" TargetName="Col0"/>

                                <Setter Property="Width" Value="Auto" TargetName="Col3"/>

                                <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>

                                <Setter Property="Visibility" Value="Collapsed" TargetName="GlyphPanel"/>

                                <Setter Property="Visibility" Value="Collapsed" TargetName="IGTHost"/>

                                <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>

                            </Trigger>

                            <!-- Role = TopLevelItem :  this is a child menu item from the top level without any child items-->

                            <Trigger Property="Role" Value="TopLevelItem">

                                <Setter Property="Padding" Value="6,1,6,1"/>

                                <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>

                            </Trigger>

                            <!-- Role = SubMenuHeader : this is a child menu item which does not have children -->

                            <Trigger Property="Role" Value="SubmenuHeader">

                                <Setter Property="DockPanel.Dock" Value="Top"/>

                                <Setter Property="Padding" Value="0,2,0,2"/>

                            </Trigger>

                            <!-- Role = SubMenuItem : this is a child menu item which has children-->

                            <Trigger Property="Role" Value="SubmenuItem">

                                <Setter Property="DockPanel.Dock" Value="Top"/>

                                <Setter Property="Padding" Value="0,2,0,2"/>

                                <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>

                            </Trigger>

                            <Trigger Property="IsSuspendingPopupAnimation" Value="true">

                                <Setter Property="PopupAnimation" Value="None" TargetName="SubMenuPopup"/>

                            </Trigger>

                            <!-- If no Icon is present the we collapse the Icon Content -->

                            <Trigger Property="Icon" Value="{x:Null}">

                                <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>

                            </Trigger>

                            <!-- The GlyphPanel contains the CheckMark -->

                            <Trigger Property="IsChecked" Value="true">

                                <Setter Property="Visibility" Value="Visible" TargetName="GlyphPanel"/>

                                <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>

                            </Trigger>

                            <!-- Using the system colors for the Menu Highlight and IsEnabled-->

                            <Trigger Property="IsHighlighted" Value="true">

                                <Setter Property="Background" Value="#6a6a6a" TargetName="Border"/>

                                <Setter Property="Foreground" Value="Black"/>

                            </Trigger>

                            <Trigger Property="IsEnabled" Value="false">

                                <Setter Property="Foreground" Value="LightGray"/>

                            </Trigger>

                        </ControlTemplate.Triggers>

                    </ControlTemplate>

                </Setter.Value>

            </Setter>

        </Style>
    </Window.Resources>
    <Grid Background="#FF0D0D0D">
        <Grid x:Name="NavBar" Background="#FF1A1A1A" VerticalAlignment="Top" Height="20">
            <Menu HorizontalAlignment="Left" VerticalAlignment="Center" Background="#FF222222" Height="20" Width="102" >
                <MenuItem Header="File" Foreground="White" FontFamily="Cascadia Code" FontSize="14" Background="#2a2a2a" Style="{StaticResource MLB_MenuItem}">
                    <MenuItem x:Name="sigma" Header="New" Command="ApplicationCommands.New" Background="#FF343434" Foreground="White" Template="{StaticResource menuitembetter}"/>
                    <MenuItem Header="Open" Command="ApplicationCommands.Open" Background="#FF343434" Foreground="White" Template="{StaticResource menuitembetter}"/>
                    <MenuItem Header="Save" Command="ApplicationCommands.Save" Background="#FF343434" Foreground="White" Template="{StaticResource menuitembetter}"/>
                    <MenuItem Header="Save As" Command="ApplicationCommands.SaveAs" Background="#FF343434" Foreground="White" Template="{StaticResource menuitembetter}"/>
                    <MenuItem Header="Close" Command="ApplicationCommands.Close" Background="#FF343434" Foreground="White" Template="{StaticResource menuitembetter}"/>
                </MenuItem>
                <MenuItem Header="Extra" Foreground="White" FontFamily="Cascadia Code" FontSize="14" Background="#2a2a2a" Style="{StaticResource MLB_MenuItem}">
                    <MenuItem Header="Regenerate RSA Keys" Background="#FF343434" Foreground="White" Click="RegenKeys_Click" Template="{StaticResource menuitembetter}"/>
                </MenuItem>
            </Menu>
        </Grid>
        <TextBox x:Name="TextInput" HorizontalAlignment="Center" Margin="0,20,0,0" TextWrapping="Wrap" Text="" Width="784" Background="#FF0D0D0D" Foreground="White" SelectionBrush="#FF5D5D5D" BorderBrush="#FF161616" TextChanged="TextInput_TextChanged" BorderThickness="0" AcceptsReturn="True" AcceptsTab="True" VerticalScrollBarVisibility="Auto" FontFamily="Cascadia Code" FontSize="16"/>
    </Grid>
</Window>
